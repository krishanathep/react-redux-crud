{"version":3,"sources":["components/CommentForm.jsx","components/Comments.jsx","components/EditComponent.jsx","components/ShowComment.jsx","App.js","components/reducers/commentReducer.js","index.js"],"names":["CommentForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","name","getName","data","id","uuidv4","editing","props","dispatch","type","console","log","className","onSubmit","this","ref","input","cols","rows","Component","connect","Comments","comment","onClick","EditComponent","newtitle","newmessage","newname","defaultValue","ShowComment","comments","map","key","state","App","commentReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kRAIaA,EAAb,4MACEC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAQ,EAAKC,SAASC,MACtBC,EAAU,EAAKC,WAAWF,MAC1BG,EAAO,EAAKC,QAAQJ,MACpBK,EAAO,CACXC,GAAIC,cACJT,QACAG,UACAE,OACAK,SAAQ,GAGV,EAAKC,MAAMC,SAAS,CAChBC,KAAM,cACNN,SAGJ,EAAKN,SAASC,MAAQ,GACtB,EAAKE,WAAWF,MAAQ,GACxB,EAAKI,QAAQJ,MAAQ,GAErBY,QAAQC,IAAIR,IAvBhB,uDA0BY,IAAD,OACP,OACE,yBAAKS,UAAU,gBACb,0BAAMC,SAAUC,KAAKrB,cACnB,4CADF,WAEU,6BACR,2BAAOgB,KAAK,OAAOM,IAAK,SAACC,GAAD,OAAY,EAAKnB,SAAWmB,KACpD,6BAJF,aAKY,6BACV,8BACEf,KAAK,GACLG,GAAG,GACHa,KAAK,KACLC,KAAK,IACLH,IAAK,SAACC,GAAD,OAAY,EAAKhB,WAAagB,KAErC,6BAbF,SAcQ,6BACN,2BAAOP,KAAK,OAAOM,IAAK,SAACC,GAAD,OAAU,EAAKd,QAASc,KAChD,6BAAM,6BACN,2BAAOP,KAAK,SAASX,MAAM,iBA9CrC,GAAiCqB,aAqDlBC,gBAAW5B,GCtDb6B,EAAb,uKACY,IAAD,OACP,OACE,yBAAKT,UAAU,YACb,4BACE,uCACWE,KAAKP,MAAMe,QAAQ1B,MAD9B,gBACkDkB,KAAKP,MAAMe,QAAQvB,QADrE,YACuFe,KAAKP,MAAMe,QAAQrB,KAExG,4BAAQsB,QAAS,kBAAI,EAAKhB,MAAMC,SAAS,CAACC,KAAK,eAAgBL,GAAI,EAAKG,MAAMe,QAAQlB,OAAtF,QACA,4BAAQmB,QAAS,kBAAI,EAAKhB,MAAMC,SAAS,CAACC,KAAK,iBAAkBL,GAAI,EAAKG,MAAMe,QAAQlB,OAAxF,iBATZ,GAA8Be,aAiBfC,gBAAWC,GCjBbG,EAAb,4MACE/B,aAAe,SAACC,GACdA,EAAEC,iBACF,IAIMQ,EAAO,CACXsB,SALe,EAAK5B,SAASC,MAM7B4B,WALiB,EAAK1B,WAAWF,MAMjC6B,QALc,EAAKzB,QAAQJ,OAQ7B,EAAKS,MAAMC,SAAS,CAClBC,KAAM,iBACNL,GAAI,EAAKG,MAAMe,QAAQlB,GACvBD,KAAMA,KAhBZ,uDAoBY,IAAD,OACP,OACE,yBAAKS,UAAU,iBACb,0BAAMC,SAAUC,KAAKrB,cAArB,WACU,6BACR,2BAAOgB,KAAK,OAAOM,IAAK,SAACC,GAAD,OAAY,EAAKnB,SAAWmB,GAAQY,aAAcd,KAAKP,MAAMe,QAAQ1B,QAC7F,6BAHF,aAIY,6BACV,8BACEK,KAAK,GACLG,GAAG,GACHa,KAAK,KACLC,KAAK,IACLH,IAAK,SAACC,GAAD,OAAY,EAAKhB,WAAagB,GACnCY,aAAcd,KAAKP,MAAMe,QAAQvB,UAEnC,6BAbF,SAcQ,6BACN,2BAAOU,KAAK,OAAOM,IAAK,SAACC,GAAD,OAAY,EAAKd,QAAUc,GAAQY,aAAcd,KAAKP,MAAMe,QAAQrB,OAC5F,6BACA,6BACA,2BAAOQ,KAAK,SAASX,MAAM,iBAzCrC,GAAmCqB,aAgDpBC,gBAAUI,GC9CZK,EAAb,uKAEI,OACE,yBAAKjB,UAAU,gBACb,gDACCE,KAAKP,MAAMuB,SAASC,KAAI,SAACT,GAAD,OACvB,yBAAKU,IAAKV,EAAQlB,IACfkB,EAAQhB,QACP,kBAAC,EAAD,CAAe0B,IAAKV,EAAQlB,GAAIkB,QAASA,IAEzC,kBAAC,EAAD,CAAUU,IAAKV,EAAQlB,GAAIkB,QAASA,aAVlD,GAAiCH,aAyBlBC,eANS,SAACa,GACvB,MAAO,CACLH,SAAUG,KAICb,CAAyBS,GCjBzBK,MATf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,cCsBSuB,EA9BQ,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIG,EAAW,uCAC7C,OAAQA,EAAO3B,MACb,IAAK,cACH,OAAOwB,EAAMI,OAAO,CAACD,EAAOjC,OAC9B,IAAK,iBACH,OAAO8B,EAAMK,QAAO,SAAChB,GAAD,OAAaA,EAAQlB,KAAOgC,EAAOhC,MACzD,IAAK,eACH,OAAO6B,EAAMF,KAAI,SAACT,GAAD,OACfA,EAAQlB,KAAOgC,EAAOhC,GAAtB,2BACSkB,GADT,IACkBhB,SAAUgB,EAAQhB,UAChCgB,KAER,IAAK,iBACH,OAAOW,EAAMF,KAAI,SAACT,GAChB,OAAIA,EAAQlB,KAAOgC,EAAOhC,GACjB,2BACFkB,GADL,IAEE1B,MAAOwC,EAAOjC,KAAKsB,SACnB1B,QAASqC,EAAOjC,KAAKuB,WACrBzB,KAAMmC,EAAOjC,KAAKwB,QAClBrB,SAAUgB,EAAQhB,UAERgB,KAGlB,QACE,OAAOW,IClBPM,EAAQC,YAAYL,GAE1BM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.385c0da7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from 'react-redux'\n\nexport class CommentForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const name = this.getName.value;\n    const data = {\n      id: uuidv4(),\n      title,\n      message,\n      name,\n      editing:false,\n    };\n\n    this.props.dispatch({\n        type: 'ADD_COMMENT',\n        data\n    })\n\n    this.getTitle.value = '';\n    this.getMessage.value = '';\n    this.getName.value = '';\n\n    console.log(data);\n  };\n\n  render() {\n    return (\n      <div className=\"Comment Form\">\n        <form onSubmit={this.handleSubmit}>\n          <h1>Comment Form</h1>\n          Title : <br />\n          <input type=\"text\" ref={(input) => (this.getTitle = input)} />\n          <br />\n          Comment : <br />\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"5\"\n            ref={(input) => (this.getMessage = input)}\n          ></textarea>\n          <br />\n          Name: <br/>\n          <input type=\"text\" ref={(input)=>(this.getName =input)}/>\n          <br /><br/>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect() (CommentForm);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\n\nexport class Comments extends Component {\n  render() {\n    return (\n      <div className=\"Comments\">\n        <li>\n          <ul>\n            Title : {this.props.comment.title} | Comment : {this.props.comment.message} | Name: {this.props.comment.name}\n            \n            <button onClick={()=>this.props.dispatch({type:'EDIT_COMMENT', id: this.props.comment.id})}>Edit</button> \n            <button onClick={()=>this.props.dispatch({type:'DELETE_COMMENT', id: this.props.comment.id})}>Delete</button>\n          </ul>\n        </li>\n      </div>\n    );\n  }\n}\n\nexport default connect() (Comments);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nexport class EditComponent extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newtitle = this.getTitle.value;\n    const newmessage = this.getMessage.value;\n    const newname = this.getName.value;\n\n    const data = {\n      newtitle,\n      newmessage,\n      newname,\n    };\n    \n    this.props.dispatch({\n      type: 'UPDATE_COMMENT',\n      id: this.props.comment.id,\n      data: data,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"Edit Componet\">\n        <form onSubmit={this.handleSubmit}>\n          Title : <br />\n          <input type=\"text\" ref={(input) => (this.getTitle = input)} defaultValue={this.props.comment.title} />\n          <br />\n          Comment : <br />\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"5\"\n            ref={(input) => (this.getMessage = input)}\n            defaultValue={this.props.comment.message}\n          ></textarea>\n          <br />\n          Name: <br />\n          <input type=\"text\" ref={(input) => (this.getName = input)} defaultValue={this.props.comment.name} />\n          <br />\n          <br />\n          <input type=\"submit\" value=\"Update\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(EditComponent);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Comments from \"./Comments\";\nimport EditComponent from \"./EditComponent\";\n\nexport class ShowComment extends Component {\n  render() {\n    return (\n      <div className=\"Show Comment\">\n        <h1>Show All Comment</h1>\n        {this.props.comments.map((comment) => (\n          <div key={comment.id}>\n            {comment.editing ? (\n              <EditComponent key={comment.id} comment={comment} />\n            ) : (\n              <Comments key={comment.id} comment={comment} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    comments: state,\n  };\n};\n\nexport default connect(mapStateToProps)(ShowComment);\n","import React from 'react';\nimport CommentForm from './components/CommentForm';\nimport ShowComment from './components/ShowComment';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CommentForm/>\n      <ShowComment/>\n    </div>\n  );\n}\n\nexport default App;\n","const commentReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_COMMENT\":\n      return state.concat([action.data]);\n    case \"DELETE_COMMENT\":\n      return state.filter((comment) => comment.id !== action.id);\n    case \"EDIT_COMMENT\":\n      return state.map((comment) =>\n        comment.id === action.id\n          ? { ...comment, editing: !comment.editing }\n          : comment\n      );\n    case \"UPDATE_COMMENT\":\n      return state.map((comment) => {\n        if (comment.id === action.id) {\n          return {\n            ...comment,\n            title: action.data.newtitle,\n            message: action.data.newmessage,\n            name: action.data.newname,\n            editing: !comment.editing,\n          };\n        } else return comment;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport commentReducer from './components/reducers/commentReducer'\n\nconst store = createStore(commentReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}