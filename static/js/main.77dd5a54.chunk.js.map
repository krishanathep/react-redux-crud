{"version":3,"sources":["components/CommentForm.jsx","components/Comments.jsx","components/EditComponent.jsx","components/ShowComment.jsx","App.js","components/reducers/commentReducer.js","index.js"],"names":["CommentForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","name","getName","data","id","uuidv4","editing","props","dispatch","type","console","log","className","onSubmit","this","htmlFor","ref","input","placeholder","required","cols","rows","Component","connect","Comments","comment","onClick","EditComponent","newtitle","newmessage","newname","defaultValue","ShowComment","comments","map","key","state","App","commentReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77dd5a54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\n\nexport class CommentForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const name = this.getName.value;\n    const data = {\n      id: uuidv4(),\n      title,\n      message,\n      name,\n      editing: false,\n    };\n\n    this.props.dispatch({\n      type: \"ADD_COMMENT\",\n      data,\n    });\n\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n    this.getName.value = \"\";\n\n    console.log(data);\n  };\n\n  render() {\n    return (\n      <div className=\"Comment Form container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card mt-3\">\n              <div className=\"card-header\">\n                <h4>Comment Form</h4>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Title:</label>\n                    <input\n                      type=\"text\"\n                      ref={(input) => (this.getTitle = input)}\n                      className=\"form-control\"\n                      placeholder=\"Entoer Title Comment...\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\"></div>\n                  <label htmlFor=\"\">Message:</label>\n                  <textarea\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    ref={(input) => (this.getMessage = input)}\n                    className=\"form-control\"\n                    placeholder=\"Enter Message Comment...\"\n                    required\n                  ></textarea>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Name:</label>\n                    <input\n                      type=\"text\"\n                      ref={(input) => (this.getName = input)}\n                      className=\"form-control\"\n                      placeholder=\"Enter Your Name...\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group float-right\">\n                  <input className='btn btn-primary fl' type=\"submit\" value=\"Submit\" />\n                  </div>\n                </form>\n              </div>       \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CommentForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nexport class Comments extends Component {\n  render() {\n    return (\n      <div className=\"Comments\">\n        <div className=\"card mt-3\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">{this.props.comment.title}</h4>\n            <p className=\"card-text text-muted\">{this.props.comment.message}</p>\n            <p className=\"card-text text muted\">{this.props.comment.name}</p>\n            <button\n              className=\"btn btn-primary mr-1\"\n              onClick={() =>\n                this.props.dispatch({\n                  type: \"EDIT_COMMENT\",\n                  id: this.props.comment.id,\n                })\n              }\n            >\n              Edit\n            </button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() =>\n                this.props.dispatch({\n                  type: \"DELETE_COMMENT\",\n                  id: this.props.comment.id,\n                })\n              }\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Comments);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nexport class EditComponent extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newtitle = this.getTitle.value;\n    const newmessage = this.getMessage.value;\n    const newname = this.getName.value;\n\n    const data = {\n      newtitle,\n      newmessage,\n      newname,\n    };\n    \n    this.props.dispatch({\n      type: 'UPDATE_COMMENT',\n      id: this.props.comment.id,\n      data: data,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"Edit Componet\">\n        <form onSubmit={this.handleSubmit}>\n          Title : <br />\n          <input type=\"text\" ref={(input) => (this.getTitle = input)} defaultValue={this.props.comment.title} />\n          <br />\n          Comment : <br />\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"5\"\n            ref={(input) => (this.getMessage = input)}\n            defaultValue={this.props.comment.message}\n          ></textarea>\n          <br />\n          Name: <br />\n          <input type=\"text\" ref={(input) => (this.getName = input)} defaultValue={this.props.comment.name} />\n          <br />\n          <br />\n          <input type=\"submit\" value=\"Update\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(EditComponent);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Comments from \"./Comments\";\nimport EditComponent from \"./EditComponent\";\n\nexport class ShowComment extends Component {\n  render() {\n    return (\n      <div className=\"Show Comment container\">\n        {this.props.comments.map((comment) => (\n          <div key={comment.id}>\n            {comment.editing ? (\n              <EditComponent key={comment.id} comment={comment} />\n            ) : (\n              <Comments key={comment.id} comment={comment} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    comments: state,\n  };\n};\n\nexport default connect(mapStateToProps)(ShowComment);\n","import React from 'react';\nimport CommentForm from './components/CommentForm';\nimport ShowComment from './components/ShowComment';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CommentForm/>\n      <ShowComment/>\n    </div>\n  );\n}\n\nexport default App;\n","const commentReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_COMMENT\":\n      return state.concat([action.data]);\n    case \"DELETE_COMMENT\":\n      return state.filter((comment) => comment.id !== action.id);\n    case \"EDIT_COMMENT\":\n      return state.map((comment) =>\n        comment.id === action.id\n          ? { ...comment, editing: !comment.editing }\n          : comment\n      );\n    case \"UPDATE_COMMENT\":\n      return state.map((comment) => {\n        if (comment.id === action.id) {\n          return {\n            ...comment,\n            title: action.data.newtitle,\n            message: action.data.newmessage,\n            name: action.data.newname,\n            editing: !comment.editing,\n          };\n        } else return comment;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport commentReducer from './components/reducers/commentReducer'\n\nconst store = createStore(commentReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}